name: Smart Publish to DEV.to

on:
  push:
    paths:
      - "articles/**/*.md"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: pip install requests pyyaml

      - name: Publish Only New Files
        env:
          DEVTO_API_KEY: ${{ secrets.DEVTO_API_KEY }}
        run: |
          import os, subprocess, yaml, json, requests

          # Get newly added markdown files from the last commit
          result = subprocess.run(
              ["git", "diff", "--name-status", "HEAD^", "HEAD"],
              capture_output=True, text=True
          )
          new_files = [
              line.split("\t")[1] for line in result.stdout.splitlines()
              if line.startswith("A") and line.endswith(".md")
          ]

          if not new_files:
              print("No new markdown files added.")
              exit(0)

          print("New articles detected:", new_files)

          for f in new_files:
              with open(f, "r", encoding="utf-8") as file:
                  content = file.read()

              # Parse frontmatter (YAML between --- markers)
              frontmatter = {}
              if content.startswith("---"):
                  parts = content.split("---", 2)
                  try:
                      frontmatter = yaml.safe_load(parts[1]) or {}
                      content_body = parts[2].strip()
                  except Exception:
                      content_body = content
              else:
                  content_body = content

              title = frontmatter.get("title") or os.path.basename(f).replace(".md", "").replace("-", " ").title()
              tags = frontmatter.get("tags", ["technology"])
              series = frontmatter.get("series")
              published = frontmatter.get("published", True)

              payload = {
                  "article": {
                      "title": title,
                      "published": published,
                      "body_markdown": content_body,
                      "tags": tags,
                      "series": series
                  }
              }

              headers = {
                  "api-key": os.environ["DEVTO_API_KEY"],
                  "Content-Type": "application/json"
              }

              print(f"Uploading {f} â†’ DEV.to...")
              res = requests.post("https://dev.to/api/articles", headers=headers, data=json.dumps(payload))
              print(f"Status: {res.status_code}")
              print(res.text[:300])
